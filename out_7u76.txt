[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/project
[info] Set current project to scala-vs-java (in build file:/home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/)
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/}scala-vs-java...
[info] Resolving org.scala-lang#scala-library;2.11.6 ...
[info] Resolving org.openjdk.jmh#jmh-core;1.8 ...
[info] Resolving net.sf.jopt-simple#jopt-simple;4.6 ...
[info] Resolving org.apache.commons#commons-math3;3.2 ...
[info] Resolving org.openjdk.jmh#jmh-generator-bytecode;1.8 ...
[info] Resolving org.openjdk.jmh#jmh-generator-reflection;1.8 ...
[info] Resolving org.openjdk.jmh#jmh-generator-asm;1.8 ...
[info] Resolving org.ow2.asm#asm;5.0.3 ...
[info] Resolving org.specs2#specs2-scalacheck_2.11;3.3 ...
[info] Resolving org.specs2#specs2-core_2.11;3.3 ...
[info] Resolving org.specs2#specs2-matcher_2.11;3.3 ...
[info] Resolving org.specs2#specs2-common_2.11;3.3 ...
[info] Resolving org.scalaz#scalaz-core_2.11;7.1.1 ...
[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.2 ...
[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.2 ...
[info] Resolving org.scalaz#scalaz-concurrent_2.11;7.1.1 ...
[info] Resolving org.scalaz#scalaz-effect_2.11;7.1.1 ...
[info] Resolving org.scalaz.stream#scalaz-stream_2.11;0.7a ...
[info] Resolving org.scodec#scodec-bits_2.11;1.0.6 ...
[info] Resolving org.scala-lang#scala-reflect;2.11.6 ...
[info] Resolving com.chuusai#shapeless_2.11;2.0.0 ...
[info] Resolving org.scalacheck#scalacheck_2.11;1.12.2 ...
[info] Resolving org.scala-sbt#test-interface;1.0 ...
[info] Resolving org.scala-lang#scala-compiler;2.11.6 ...
[info] Resolving org.scala-lang.modules#scala-xml_2.11;1.0.3 ...
[info] Resolving org.scala-lang.modules#scala-parser-combinators_2.11;1.0.3 ...
[info] Resolving jline#jline;2.12.1 ...
[info] Done updating.
[info] Compiling 3 Scala sources and 3 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/target/scala-2.11/classes...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/src/main/java/com/github/plokhotnyuk/scala_vs_java/JavaFactorial.java:77: serializable class <anonymous com.github.plokhotnyuk.scala_vs_java.JavaFactorial$1> has no definition of serialVersionUID
[warn] {
[warn]             protected BigInteger compute() {
[warn]                 return recursePar(nm + 1, n2);
[warn]             }
[warn]         }
[info] Generating JMH benchmark Java source files...
Processing 8 classes from /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/target/scala-2.11/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/target/scala-2.11/generated-sources/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/target/scala-2.11/classes
[info] Compiling generated JMH benchmarks...
[info] Compiling 3 Scala sources and 47 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/target/scala-2.11/classes...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/scala-vs-java/src/main/java/com/github/plokhotnyuk/scala_vs_java/JavaFactorial.java:77: serializable class <anonymous com.github.plokhotnyuk.scala_vs_java.JavaFactorial$1> has no definition of serialVersionUID
[warn] {
[warn]             protected BigInteger compute() {
[warn]                 return recursePar(nm + 1, n2);
[warn]             }
[warn]         }
[info] Running org.openjdk.jmh.Main .*
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.loop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 0.00% complete, ETA 00:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55933.303 ops/ms
[info] # Warmup Iteration   2: 57754.502 ops/ms
[info] # Warmup Iteration   3: 57846.514 ops/ms
[info] Iteration   1: 57805.740 ops/ms
[info] Iteration   2: 52785.677 ops/ms
[info] Iteration   3: 51261.048 ops/ms
[info] Iteration   4: 58049.987 ops/ms
[info] Iteration   5: 57982.852 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   55577.061 ±(99.9%) 12667.681 ops/ms [Average]
[info]   (min, avg, max) = (51261.048, 55577.061, 58049.987), stdev = 3289.756
[info]   CI (99.9%): [42909.380, 68244.742] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.loop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 1.56% complete, ETA 00:08:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1049.209 ops/ms
[info] # Warmup Iteration   2: 1110.669 ops/ms
[info] # Warmup Iteration   3: 957.898 ops/ms
[info] Iteration   1: 1109.078 ops/ms
[info] Iteration   2: 1103.813 ops/ms
[info] Iteration   3: 1103.907 ops/ms
[info] Iteration   4: 1106.743 ops/ms
[info] Iteration   5: 1100.304 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   1104.769 ±(99.9%) 12.779 ops/ms [Average]
[info]   (min, avg, max) = (1100.304, 1104.769, 1109.078), stdev = 3.319
[info]   CI (99.9%): [1091.990, 1117.548] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.loop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 3.13% complete, ETA 00:08:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7.946 ops/ms
[info] # Warmup Iteration   2: 8.506 ops/ms
[info] # Warmup Iteration   3: 8.657 ops/ms
[info] Iteration   1: 7.557 ops/ms
[info] Iteration   2: 8.178 ops/ms
[info] Iteration   3: 7.723 ops/ms
[info] Iteration   4: 8.612 ops/ms
[info] Iteration   5: 8.459 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   8.106 ±(99.9%) 1.759 ops/ms [Average]
[info]   (min, avg, max) = (7.557, 8.106, 8.612), stdev = 0.457
[info]   CI (99.9%): [6.347, 9.864] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.loop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 4.69% complete, ETA 00:08:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.040 ops/ms
[info] # Warmup Iteration   2: 0.042 ops/ms
[info] # Warmup Iteration   3: 0.041 ops/ms
[info] Iteration   1: 0.038 ops/ms
[info] Iteration   2: 0.040 ops/ms
[info] Iteration   3: 0.040 ops/ms
[info] Iteration   4: 0.042 ops/ms
[info] Iteration   5: 0.037 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   0.039 ±(99.9%) 0.007 ops/ms [Average]
[info]   (min, avg, max) = (0.037, 0.039, 0.042), stdev = 0.002
[info]   CI (99.9%): [0.032, 0.047] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursion
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 6.25% complete, ETA 00:08:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46906.090 ops/ms
[info] # Warmup Iteration   2: 58789.166 ops/ms
[info] # Warmup Iteration   3: 51080.358 ops/ms
[info] Iteration   1: 57432.284 ops/ms
[info] Iteration   2: 54218.664 ops/ms
[info] Iteration   3: 44141.411 ops/ms
[info] Iteration   4: 48020.271 ops/ms
[info] Iteration   5: 54370.161 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   51636.558 ±(99.9%) 20824.211 ops/ms [Average]
[info]   (min, avg, max) = (44141.411, 51636.558, 57432.284), stdev = 5407.981
[info]   CI (99.9%): [30812.347, 72460.769] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursion
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 7.81% complete, ETA 00:08:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 945.277 ops/ms
[info] # Warmup Iteration   2: 880.693 ops/ms
[info] # Warmup Iteration   3: 897.695 ops/ms
[info] Iteration   1: 1030.576 ops/ms
[info] Iteration   2: 914.145 ops/ms
[info] Iteration   3: 893.271 ops/ms
[info] Iteration   4: 897.169 ops/ms
[info] Iteration   5: 901.550 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   927.342 ±(99.9%) 224.265 ops/ms [Average]
[info]   (min, avg, max) = (893.271, 927.342, 1030.576), stdev = 58.241
[info]   CI (99.9%): [703.077, 1151.607] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursion
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 9.38% complete, ETA 00:08:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13.562 ops/ms
[info] # Warmup Iteration   2: 14.383 ops/ms
[info] # Warmup Iteration   3: 14.511 ops/ms
[info] Iteration   1: 12.778 ops/ms
[info] Iteration   2: 13.460 ops/ms
[info] Iteration   3: 12.603 ops/ms
[info] Iteration   4: 13.284 ops/ms
[info] Iteration   5: 14.353 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   13.296 ±(99.9%) 2.649 ops/ms [Average]
[info]   (min, avg, max) = (12.603, 13.296, 14.353), stdev = 0.688
[info]   CI (99.9%): [10.646, 15.945] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursion
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 10.94% complete, ETA 00:07:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.090 ops/ms
[info] # Warmup Iteration   2: 0.094 ops/ms
[info] # Warmup Iteration   3: 0.094 ops/ms
[info] Iteration   1: 0.094 ops/ms
[info] Iteration   2: 0.094 ops/ms
[info] Iteration   3: 0.094 ops/ms
[info] Iteration   4: 0.094 ops/ms
[info] Iteration   5: 0.094 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   0.094 ±(99.9%) 0.001 ops/ms [Average]
[info]   (min, avg, max) = (0.094, 0.094, 0.094), stdev = 0.001
[info]   CI (99.9%): [0.094, 0.095] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursionPar
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 12.50% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56435.553 ops/ms
[info] # Warmup Iteration   2: 56845.244 ops/ms
[info] # Warmup Iteration   3: 51240.054 ops/ms
[info] Iteration   1: 50781.141 ops/ms
[info] Iteration   2: 54498.001 ops/ms
[info] Iteration   3: 50680.184 ops/ms
[info] Iteration   4: 45374.733 ops/ms
[info] Iteration   5: 51098.469 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   50486.506 ±(99.9%) 12584.176 ops/ms [Average]
[info]   (min, avg, max) = (45374.733, 50486.506, 54498.001), stdev = 3268.071
[info]   CI (99.9%): [37902.329, 63070.682] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursionPar
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 14.06% complete, ETA 00:07:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 837.669 ops/ms
[info] # Warmup Iteration   2: 988.946 ops/ms
[info] # Warmup Iteration   3: 747.376 ops/ms
[info] Iteration   1: 900.511 ops/ms
[info] Iteration   2: 985.076 ops/ms
[info] Iteration   3: 988.780 ops/ms
[info] Iteration   4: 875.470 ops/ms
[info] Iteration   5: 959.770 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   941.921 ±(99.9%) 197.355 ops/ms [Average]
[info]   (min, avg, max) = (875.470, 941.921, 988.780), stdev = 51.252
[info]   CI (99.9%): [744.567, 1139.276] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursionPar
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 15.63% complete, ETA 00:07:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13.601 ops/ms
[info] # Warmup Iteration   2: 15.029 ops/ms
[info] # Warmup Iteration   3: 7.833 ops/ms
[info] Iteration   1: 8.660 ops/ms
[info] Iteration   2: 11.287 ops/ms
[info] Iteration   3: 10.632 ops/ms
[info] Iteration   4: 13.549 ops/ms
[info] Iteration   5: 13.652 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   11.556 ±(99.9%) 8.096 ops/ms [Average]
[info]   (min, avg, max) = (8.660, 11.556, 13.652), stdev = 2.102
[info]   CI (99.9%): [3.460, 19.652] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursionPar
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 17.19% complete, ETA 00:07:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.101 ops/ms
[info] # Warmup Iteration   2: 0.088 ops/ms
[info] # Warmup Iteration   3: 0.103 ops/ms
[info] Iteration   1: 0.106 ops/ms
[info] Iteration   2: 0.106 ops/ms
[info] Iteration   3: 0.098 ops/ms
[info] Iteration   4: 0.102 ops/ms
[info] Iteration   5: 0.104 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   0.103 ±(99.9%) 0.013 ops/ms [Average]
[info]   (min, avg, max) = (0.098, 0.103, 0.106), stdev = 0.003
[info]   CI (99.9%): [0.090, 0.116] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.split
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 18.75% complete, ETA 00:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51983.591 ops/ms
[info] # Warmup Iteration   2: 52171.619 ops/ms
[info] # Warmup Iteration   3: 55755.232 ops/ms
[info] Iteration   1: 55219.511 ops/ms
[info] Iteration   2: 47555.652 ops/ms
[info] Iteration   3: 55798.492 ops/ms
[info] Iteration   4: 52672.377 ops/ms
[info] Iteration   5: 55321.194 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   53313.445 ±(99.9%) 13255.776 ops/ms [Average]
[info]   (min, avg, max) = (47555.652, 53313.445, 55798.492), stdev = 3442.483
[info]   CI (99.9%): [40057.669, 66569.221] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.split
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 20.31% complete, ETA 00:07:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 934.993 ops/ms
[info] # Warmup Iteration   2: 758.662 ops/ms
[info] # Warmup Iteration   3: 976.419 ops/ms
[info] Iteration   1: 980.158 ops/ms
[info] Iteration   2: 898.243 ops/ms
[info] Iteration   3: 1032.252 ops/ms
[info] Iteration   4: 1027.775 ops/ms
[info] Iteration   5: 973.556 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   982.397 ±(99.9%) 208.343 ops/ms [Average]
[info]   (min, avg, max) = (898.243, 982.397, 1032.252), stdev = 54.106
[info]   CI (99.9%): [774.054, 1190.739] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.split
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 21.88% complete, ETA 00:06:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19.671 ops/ms
[info] # Warmup Iteration   2: 20.749 ops/ms
[info] # Warmup Iteration   3: 19.139 ops/ms
[info] Iteration   1: 20.846 ops/ms
[info] Iteration   2: 17.536 ops/ms
[info] Iteration   3: 18.106 ops/ms
[info] Iteration   4: 18.044 ops/ms
[info] Iteration   5: 20.847 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   19.076 ±(99.9%) 6.283 ops/ms [Average]
[info]   (min, avg, max) = (17.536, 19.076, 20.847), stdev = 1.632
[info]   CI (99.9%): [12.793, 25.359] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFactorial.split
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 23.44% complete, ETA 00:06:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.119 ops/ms
[info] # Warmup Iteration   2: 0.123 ops/ms
[info] # Warmup Iteration   3: 0.110 ops/ms
[info] Iteration   1: 0.107 ops/ms
[info] Iteration   2: 0.109 ops/ms
[info] Iteration   3: 0.107 ops/ms
[info] Iteration   4: 0.103 ops/ms
[info] Iteration   5: 0.107 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   0.107 ±(99.9%) 0.008 ops/ms [Average]
[info]   (min, avg, max) = (0.103, 0.107, 0.109), stdev = 0.002
[info]   CI (99.9%): [0.099, 0.114] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.doublingLoop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 25.00% complete, ETA 00:06:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60926.762 ops/ms
[info] # Warmup Iteration   2: 67835.170 ops/ms
[info] # Warmup Iteration   3: 58410.611 ops/ms
[info] Iteration   1: 54991.567 ops/ms
[info] Iteration   2: 57940.797 ops/ms
[info] Iteration   3: 65634.938 ops/ms
[info] Iteration   4: 65574.932 ops/ms
[info] Iteration   5: 40869.687 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   57002.384 ±(99.9%) 39136.519 ops/ms [Average]
[info]   (min, avg, max) = (40869.687, 57002.384, 65634.938), stdev = 10163.630
[info]   CI (99.9%): [17865.865, 96138.903] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.doublingLoop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 26.56% complete, ETA 00:06:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3789.020 ops/ms
[info] # Warmup Iteration   2: 3430.780 ops/ms
[info] # Warmup Iteration   3: 3495.347 ops/ms
[info] Iteration   1: 3440.933 ops/ms
[info] Iteration   2: 3564.607 ops/ms
[info] Iteration   3: 3769.997 ops/ms
[info] Iteration   4: 3718.135 ops/ms
[info] Iteration   5: 3468.670 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   3592.468 ±(99.9%) 565.841 ops/ms [Average]
[info]   (min, avg, max) = (3440.933, 3592.468, 3769.997), stdev = 146.947
[info]   CI (99.9%): [3026.628, 4158.309] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.doublingLoop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 28.13% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 337.574 ops/ms
[info] # Warmup Iteration   2: 351.723 ops/ms
[info] # Warmup Iteration   3: 310.292 ops/ms
[info] Iteration   1: 311.992 ops/ms
[info] Iteration   2: 333.040 ops/ms
[info] Iteration   3: 313.244 ops/ms
[info] Iteration   4: 320.983 ops/ms
[info] Iteration   5: 356.200 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   327.092 ±(99.9%) 70.472 ops/ms [Average]
[info]   (min, avg, max) = (311.992, 327.092, 356.200), stdev = 18.301
[info]   CI (99.9%): [256.620, 397.564] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.doublingLoop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 29.69% complete, ETA 00:06:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11.479 ops/ms
[info] # Warmup Iteration   2: 11.809 ops/ms
[info] # Warmup Iteration   3: 11.195 ops/ms
[info] Iteration   1: 11.864 ops/ms
[info] Iteration   2: 10.354 ops/ms
[info] Iteration   3: 9.500 ops/ms
[info] Iteration   4: 10.280 ops/ms
[info] Iteration   5: 11.821 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   10.764 ±(99.9%) 4.006 ops/ms [Average]
[info]   (min, avg, max) = (9.500, 10.764, 11.864), stdev = 1.040
[info]   CI (99.9%): [6.758, 14.770] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.loop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 31.25% complete, ETA 00:06:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70236.897 ops/ms
[info] # Warmup Iteration   2: 69521.118 ops/ms
[info] # Warmup Iteration   3: 65242.559 ops/ms
[info] Iteration   1: 73149.638 ops/ms
[info] Iteration   2: 71305.669 ops/ms
[info] Iteration   3: 74180.837 ops/ms
[info] Iteration   4: 74065.675 ops/ms
[info] Iteration   5: 69247.896 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   72389.943 ±(99.9%) 8086.496 ops/ms [Average]
[info]   (min, avg, max) = (69247.896, 72389.943, 74180.837), stdev = 2100.037
[info]   CI (99.9%): [64303.447, 80476.439] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.loop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 32.81% complete, ETA 00:05:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3789.849 ops/ms
[info] # Warmup Iteration   2: 3850.595 ops/ms
[info] # Warmup Iteration   3: 3971.230 ops/ms
[info] Iteration   1: 3968.908 ops/ms
[info] Iteration   2: 3852.485 ops/ms
[info] Iteration   3: 3937.566 ops/ms
[info] Iteration   4: 3998.011 ops/ms
[info] Iteration   5: 3015.819 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   3754.558 ±(99.9%) 1603.958 ops/ms [Average]
[info]   (min, avg, max) = (3015.819, 3754.558, 3998.011), stdev = 416.543
[info]   CI (99.9%): [2150.600, 5358.516] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.loop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 34.38% complete, ETA 00:05:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24.386 ops/ms
[info] # Warmup Iteration   2: 26.070 ops/ms
[info] # Warmup Iteration   3: 25.944 ops/ms
[info] Iteration   1: 22.645 ops/ms
[info] Iteration   2: 22.120 ops/ms
[info] Iteration   3: 22.319 ops/ms
[info] Iteration   4: 23.376 ops/ms
[info] Iteration   5: 25.691 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   23.230 ±(99.9%) 5.608 ops/ms [Average]
[info]   (min, avg, max) = (22.120, 23.230, 25.691), stdev = 1.456
[info]   CI (99.9%): [17.622, 28.838] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.loop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 35.94% complete, ETA 00:05:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.518 ops/ms
[info] # Warmup Iteration   2: 0.525 ops/ms
[info] # Warmup Iteration   3: 0.458 ops/ms
[info] Iteration   1: 0.399 ops/ms
[info] Iteration   2: 0.430 ops/ms
[info] Iteration   3: 0.464 ops/ms
[info] Iteration   4: 0.479 ops/ms
[info] Iteration   5: 0.475 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   0.449 ±(99.9%) 0.131 ops/ms [Average]
[info]   (min, avg, max) = (0.399, 0.449, 0.479), stdev = 0.034
[info]   CI (99.9%): [0.318, 0.580] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 37.50% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332346.091 ops/ms
[info] # Warmup Iteration   2: 334210.543 ops/ms
[info] # Warmup Iteration   3: 318239.796 ops/ms
[info] Iteration   1: 318122.251 ops/ms
[info] Iteration   2: 366534.744 ops/ms
[info] Iteration   3: 366886.669 ops/ms
[info] Iteration   4: 366814.832 ops/ms
[info] Iteration   5: 366048.088 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   356881.317 ±(99.9%) 83441.449 ops/ms [Average]
[info]   (min, avg, max) = (318122.251, 356881.317, 366886.669), stdev = 21669.479
[info]   CI (99.9%): [273439.867, 440322.766] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 39.06% complete, ETA 00:05:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 333232.851 ops/ms
[info] # Warmup Iteration   2: 335228.523 ops/ms
[info] # Warmup Iteration   3: 362265.643 ops/ms
[info] Iteration   1: 321262.591 ops/ms
[info] Iteration   2: 322110.799 ops/ms
[info] Iteration   3: 322301.291 ops/ms
[info] Iteration   4: 370401.707 ops/ms
[info] Iteration   5: 369632.001 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   341141.678 ±(99.9%) 101516.888 ops/ms [Average]
[info]   (min, avg, max) = (321262.591, 341141.678, 370401.707), stdev = 26363.613
[info]   CI (99.9%): [239624.790, 442658.566] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 40.63% complete, ETA 00:05:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 325190.411 ops/ms
[info] # Warmup Iteration   2: 335398.663 ops/ms
[info] # Warmup Iteration   3: 322137.106 ops/ms
[info] Iteration   1: 313931.117 ops/ms
[info] Iteration   2: 321203.709 ops/ms
[info] Iteration   3: 346610.804 ops/ms
[info] Iteration   4: 315814.945 ops/ms
[info] Iteration   5: 338850.699 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   327282.255 ±(99.9%) 56268.256 ops/ms [Average]
[info]   (min, avg, max) = (313931.117, 327282.255, 346610.804), stdev = 14612.687
[info]   CI (99.9%): [271013.999, 383550.511] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 42.19% complete, ETA 00:05:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 321185.620 ops/ms
[info] # Warmup Iteration   2: 335418.799 ops/ms
[info] # Warmup Iteration   3: 321928.348 ops/ms
[info] Iteration   1: 370748.759 ops/ms
[info] Iteration   2: 370498.473 ops/ms
[info] Iteration   3: 370792.271 ops/ms
[info] Iteration   4: 348441.315 ops/ms
[info] Iteration   5: 368780.662 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   365852.296 ±(99.9%) 37614.466 ops/ms [Average]
[info]   (min, avg, max) = (348441.315, 365852.296, 370792.271), stdev = 9768.357
[info]   CI (99.9%): [328237.830, 403466.762] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 43.75% complete, ETA 00:05:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98706.665 ops/ms
[info] # Warmup Iteration   2: 102820.881 ops/ms
[info] # Warmup Iteration   3: 95387.849 ops/ms
[info] Iteration   1: 97945.108 ops/ms
[info] Iteration   2: 95532.603 ops/ms
[info] Iteration   3: 101154.272 ops/ms
[info] Iteration   4: 109824.857 ops/ms
[info] Iteration   5: 95527.002 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   99996.768 ±(99.9%) 22946.738 ops/ms [Average]
[info]   (min, avg, max) = (95527.002, 99996.768, 109824.857), stdev = 5959.195
[info]   CI (99.9%): [77050.030, 122943.507] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 45.31% complete, ETA 00:04:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19865.015 ops/ms
[info] # Warmup Iteration   2: 19879.087 ops/ms
[info] # Warmup Iteration   3: 18793.191 ops/ms
[info] Iteration   1: 18577.529 ops/ms
[info] Iteration   2: 18806.188 ops/ms
[info] Iteration   3: 19976.467 ops/ms
[info] Iteration   4: 21362.286 ops/ms
[info] Iteration   5: 21362.014 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   20016.897 ±(99.9%) 5151.322 ops/ms [Average]
[info]   (min, avg, max) = (18577.529, 20016.897, 21362.286), stdev = 1337.782
[info]   CI (99.9%): [14865.575, 25168.219] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 46.88% complete, ETA 00:04:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2420.024 ops/ms
[info] # Warmup Iteration   2: 2451.604 ops/ms
[info] # Warmup Iteration   3: 2478.875 ops/ms
[info] Iteration   1: 2479.104 ops/ms
[info] Iteration   2: 2478.584 ops/ms
[info] Iteration   3: 2480.163 ops/ms
[info] Iteration   4: 2477.272 ops/ms
[info] Iteration   5: 2474.454 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   2477.915 ±(99.9%) 8.460 ops/ms [Average]
[info]   (min, avg, max) = (2474.454, 2477.915, 2480.163), stdev = 2.197
[info]   CI (99.9%): [2469.456, 2486.375] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 48.44% complete, ETA 00:04:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 245.756 ops/ms
[info] # Warmup Iteration   2: 247.219 ops/ms
[info] # Warmup Iteration   3: 217.392 ops/ms
[info] Iteration   1: 216.650 ops/ms
[info] Iteration   2: 217.561 ops/ms
[info] Iteration   3: 220.233 ops/ms
[info] Iteration   4: 249.991 ops/ms
[info] Iteration   5: 232.804 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   227.448 ±(99.9%) 54.569 ops/ms [Average]
[info]   (min, avg, max) = (216.650, 227.448, 249.991), stdev = 14.171
[info]   CI (99.9%): [172.879, 282.016] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.loop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 50.00% complete, ETA 00:04:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43355.048 ops/ms
[info] # Warmup Iteration   2: 47505.814 ops/ms
[info] # Warmup Iteration   3: 51980.478 ops/ms
[info] Iteration   1: 46039.615 ops/ms
[info] Iteration   2: 49617.237 ops/ms
[info] Iteration   3: 50151.372 ops/ms
[info] Iteration   4: 40016.714 ops/ms
[info] Iteration   5: 50682.601 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   47301.508 ±(99.9%) 17174.985 ops/ms [Average]
[info]   (min, avg, max) = (40016.714, 47301.508, 50682.601), stdev = 4460.289
[info]   CI (99.9%): [30126.523, 64476.493] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.loop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 51.56% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 941.900 ops/ms
[info] # Warmup Iteration   2: 908.561 ops/ms
[info] # Warmup Iteration   3: 881.824 ops/ms
[info] Iteration   1: 981.053 ops/ms
[info] Iteration   2: 933.582 ops/ms
[info] Iteration   3: 896.702 ops/ms
[info] Iteration   4: 891.113 ops/ms
[info] Iteration   5: 886.461 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   917.782 ±(99.9%) 153.899 ops/ms [Average]
[info]   (min, avg, max) = (886.461, 917.782, 981.053), stdev = 39.967
[info]   CI (99.9%): [763.884, 1071.681] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.loop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 53.13% complete, ETA 00:04:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8.343 ops/ms
[info] # Warmup Iteration   2: 8.622 ops/ms
[info] # Warmup Iteration   3: 7.435 ops/ms
[info] Iteration   1: 7.457 ops/ms
[info] Iteration   2: 7.591 ops/ms
[info] Iteration   3: 7.612 ops/ms
[info] Iteration   4: 7.593 ops/ms
[info] Iteration   5: 7.482 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   7.547 ±(99.9%) 0.276 ops/ms [Average]
[info]   (min, avg, max) = (7.457, 7.547, 7.612), stdev = 0.072
[info]   CI (99.9%): [7.270, 7.823] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.loop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 54.69% complete, ETA 00:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.030 ops/ms
[info] # Warmup Iteration   2: 0.033 ops/ms
[info] # Warmup Iteration   3: 0.033 ops/ms
[info] Iteration   1: 0.033 ops/ms
[info] Iteration   2: 0.033 ops/ms
[info] Iteration   3: 0.033 ops/ms
[info] Iteration   4: 0.037 ops/ms
[info] Iteration   5: 0.032 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   0.034 ±(99.9%) 0.008 ops/ms [Average]
[info]   (min, avg, max) = (0.032, 0.034, 0.037), stdev = 0.002
[info]   CI (99.9%): [0.026, 0.041] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursion
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 56.25% complete, ETA 00:03:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40460.745 ops/ms
[info] # Warmup Iteration   2: 44897.447 ops/ms
[info] # Warmup Iteration   3: 50390.181 ops/ms
[info] Iteration   1: 47179.562 ops/ms
[info] Iteration   2: 36910.384 ops/ms
[info] Iteration   3: 48840.669 ops/ms
[info] Iteration   4: 53539.615 ops/ms
[info] Iteration   5: 52673.674 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   47828.781 ±(99.9%) 25596.170 ops/ms [Average]
[info]   (min, avg, max) = (36910.384, 47828.781, 53539.615), stdev = 6647.244
[info]   CI (99.9%): [22232.611, 73424.950] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursion
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 57.81% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 854.602 ops/ms
[info] # Warmup Iteration   2: 927.546 ops/ms
[info] # Warmup Iteration   3: 736.103 ops/ms
[info] Iteration   1: 810.323 ops/ms
[info] Iteration   2: 931.542 ops/ms
[info] Iteration   3: 931.012 ops/ms
[info] Iteration   4: 928.858 ops/ms
[info] Iteration   5: 934.709 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   907.289 ±(99.9%) 208.882 ops/ms [Average]
[info]   (min, avg, max) = (810.323, 907.289, 934.709), stdev = 54.246
[info]   CI (99.9%): [698.407, 1116.170] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursion
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 59.38% complete, ETA 00:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12.906 ops/ms
[info] # Warmup Iteration   2: 13.937 ops/ms
[info] # Warmup Iteration   3: 14.195 ops/ms
[info] Iteration   1: 12.249 ops/ms
[info] Iteration   2: 14.196 ops/ms
[info] Iteration   3: 14.095 ops/ms
[info] Iteration   4: 12.341 ops/ms
[info] Iteration   5: 12.603 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   13.097 ±(99.9%) 3.722 ops/ms [Average]
[info]   (min, avg, max) = (12.249, 13.097, 14.196), stdev = 0.967
[info]   CI (99.9%): [9.374, 16.819] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursion
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 60.94% complete, ETA 00:03:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.088 ops/ms
[info] # Warmup Iteration   2: 0.093 ops/ms
[info] # Warmup Iteration   3: 0.094 ops/ms
[info] Iteration   1: 0.082 ops/ms
[info] Iteration   2: 0.082 ops/ms
[info] Iteration   3: 0.082 ops/ms
[info] Iteration   4: 0.085 ops/ms
[info] Iteration   5: 0.088 ops/ms
[info] 
[info] 
[info] Result "recursion":
[info]   0.084 ±(99.9%) 0.011 ops/ms [Average]
[info]   (min, avg, max) = (0.082, 0.084, 0.088), stdev = 0.003
[info]   CI (99.9%): [0.073, 0.095] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursionPar
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 62.50% complete, ETA 00:03:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46201.975 ops/ms
[info] # Warmup Iteration   2: 48362.148 ops/ms
[info] # Warmup Iteration   3: 54062.596 ops/ms
[info] Iteration   1: 47419.119 ops/ms
[info] Iteration   2: 43893.007 ops/ms
[info] Iteration   3: 45870.371 ops/ms
[info] Iteration   4: 50379.249 ops/ms
[info] Iteration   5: 53233.491 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   48159.047 ±(99.9%) 14234.878 ops/ms [Average]
[info]   (min, avg, max) = (43893.007, 48159.047, 53233.491), stdev = 3696.753
[info]   CI (99.9%): [33924.170, 62393.925] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursionPar
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 64.06% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 838.000 ops/ms
[info] # Warmup Iteration   2: 931.741 ops/ms
[info] # Warmup Iteration   3: 882.933 ops/ms
[info] Iteration   1: 929.640 ops/ms
[info] Iteration   2: 837.555 ops/ms
[info] Iteration   3: 816.534 ops/ms
[info] Iteration   4: 806.498 ops/ms
[info] Iteration   5: 925.459 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   863.137 ±(99.9%) 230.564 ops/ms [Average]
[info]   (min, avg, max) = (806.498, 863.137, 929.640), stdev = 59.877
[info]   CI (99.9%): [632.574, 1093.701] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursionPar
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 65.63% complete, ETA 00:03:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8.305 ops/ms
[info] # Warmup Iteration   2: 12.625 ops/ms
[info] # Warmup Iteration   3: 12.286 ops/ms
[info] Iteration   1: 13.226 ops/ms
[info] Iteration   2: 15.519 ops/ms
[info] Iteration   3: 15.652 ops/ms
[info] Iteration   4: 11.128 ops/ms
[info] Iteration   5: 13.652 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   13.835 ±(99.9%) 7.171 ops/ms [Average]
[info]   (min, avg, max) = (11.128, 13.835, 15.652), stdev = 1.862
[info]   CI (99.9%): [6.665, 21.006] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.recursionPar
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 67.19% complete, ETA 00:02:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.079 ops/ms
[info] # Warmup Iteration   2: 0.102 ops/ms
[info] # Warmup Iteration   3: 0.099 ops/ms
[info] Iteration   1: 0.095 ops/ms
[info] Iteration   2: 0.103 ops/ms
[info] Iteration   3: 0.095 ops/ms
[info] Iteration   4: 0.097 ops/ms
[info] Iteration   5: 0.099 ops/ms
[info] 
[info] 
[info] Result "recursionPar":
[info]   0.098 ±(99.9%) 0.013 ops/ms [Average]
[info]   (min, avg, max) = (0.095, 0.098, 0.103), stdev = 0.003
[info]   CI (99.9%): [0.085, 0.111] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.split
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 68.75% complete, ETA 00:02:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39331.346 ops/ms
[info] # Warmup Iteration   2: 44554.447 ops/ms
[info] # Warmup Iteration   3: 49480.015 ops/ms
[info] Iteration   1: 52533.828 ops/ms
[info] Iteration   2: 48574.307 ops/ms
[info] Iteration   3: 52829.301 ops/ms
[info] Iteration   4: 52970.045 ops/ms
[info] Iteration   5: 53137.450 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   52008.986 ±(99.9%) 7442.423 ops/ms [Average]
[info]   (min, avg, max) = (48574.307, 52008.986, 53137.450), stdev = 1932.774
[info]   CI (99.9%): [44566.563, 59451.410] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.split
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 70.31% complete, ETA 00:02:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 849.969 ops/ms
[info] # Warmup Iteration   2: 921.610 ops/ms
[info] # Warmup Iteration   3: 921.141 ops/ms
[info] Iteration   1: 915.394 ops/ms
[info] Iteration   2: 807.670 ops/ms
[info] Iteration   3: 792.590 ops/ms
[info] Iteration   4: 814.287 ops/ms
[info] Iteration   5: 718.079 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   809.604 ±(99.9%) 271.487 ops/ms [Average]
[info]   (min, avg, max) = (718.079, 809.604, 915.394), stdev = 70.504
[info]   CI (99.9%): [538.117, 1081.091] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.split
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 71.88% complete, ETA 00:02:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19.817 ops/ms
[info] # Warmup Iteration   2: 21.479 ops/ms
[info] # Warmup Iteration   3: 21.379 ops/ms
[info] Iteration   1: 21.582 ops/ms
[info] Iteration   2: 21.687 ops/ms
[info] Iteration   3: 18.859 ops/ms
[info] Iteration   4: 21.763 ops/ms
[info] Iteration   5: 21.590 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   21.096 ±(99.9%) 4.825 ops/ms [Average]
[info]   (min, avg, max) = (18.859, 21.096, 21.763), stdev = 1.253
[info]   CI (99.9%): [16.271, 25.921] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFactorial.split
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 73.44% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.119 ops/ms
[info] # Warmup Iteration   2: 0.123 ops/ms
[info] # Warmup Iteration   3: 0.120 ops/ms
[info] Iteration   1: 0.123 ops/ms
[info] Iteration   2: 0.123 ops/ms
[info] Iteration   3: 0.123 ops/ms
[info] Iteration   4: 0.123 ops/ms
[info] Iteration   5: 0.123 ops/ms
[info] 
[info] 
[info] Result "split":
[info]   0.123 ±(99.9%) 0.001 ops/ms [Average]
[info]   (min, avg, max) = (0.123, 0.123, 0.123), stdev = 0.001
[info]   CI (99.9%): [0.123, 0.123] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.doublingLoop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 75.00% complete, ETA 00:02:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112288.744 ops/ms
[info] # Warmup Iteration   2: 115721.796 ops/ms
[info] # Warmup Iteration   3: 100503.814 ops/ms
[info] Iteration   1: 103059.564 ops/ms
[info] Iteration   2: 97587.170 ops/ms
[info] Iteration   3: 102771.806 ops/ms
[info] Iteration   4: 119172.299 ops/ms
[info] Iteration   5: 119488.102 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   108415.788 ±(99.9%) 39273.798 ops/ms [Average]
[info]   (min, avg, max) = (97587.170, 108415.788, 119488.102), stdev = 10199.281
[info]   CI (99.9%): [69141.990, 147689.587] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.doublingLoop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 76.56% complete, ETA 00:02:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2884.849 ops/ms
[info] # Warmup Iteration   2: 2918.462 ops/ms
[info] # Warmup Iteration   3: 2978.424 ops/ms
[info] Iteration   1: 3356.475 ops/ms
[info] Iteration   2: 3285.517 ops/ms
[info] Iteration   3: 3241.557 ops/ms
[info] Iteration   4: 3043.986 ops/ms
[info] Iteration   5: 3476.837 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   3280.875 ±(99.9%) 614.295 ops/ms [Average]
[info]   (min, avg, max) = (3043.986, 3280.875, 3476.837), stdev = 159.531
[info]   CI (99.9%): [2666.579, 3895.170] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.doublingLoop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 78.13% complete, ETA 00:01:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 308.652 ops/ms
[info] # Warmup Iteration   2: 330.820 ops/ms
[info] # Warmup Iteration   3: 293.140 ops/ms
[info] Iteration   1: 336.230 ops/ms
[info] Iteration   2: 337.473 ops/ms
[info] Iteration   3: 258.906 ops/ms
[info] Iteration   4: 330.840 ops/ms
[info] Iteration   5: 336.953 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   320.080 ±(99.9%) 132.079 ops/ms [Average]
[info]   (min, avg, max) = (258.906, 320.080, 337.473), stdev = 34.300
[info]   CI (99.9%): [188.002, 452.159] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.doublingLoop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 79.69% complete, ETA 00:01:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12.618 ops/ms
[info] # Warmup Iteration   2: 11.927 ops/ms
[info] # Warmup Iteration   3: 11.770 ops/ms
[info] Iteration   1: 11.785 ops/ms
[info] Iteration   2: 12.218 ops/ms
[info] Iteration   3: 12.876 ops/ms
[info] Iteration   4: 11.789 ops/ms
[info] Iteration   5: 13.474 ops/ms
[info] 
[info] 
[info] Result "doublingLoop":
[info]   12.428 ±(99.9%) 2.830 ops/ms [Average]
[info]   (min, avg, max) = (11.785, 12.428, 13.474), stdev = 0.735
[info]   CI (99.9%): [9.598, 15.258] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.loop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 81.25% complete, ETA 00:01:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119932.366 ops/ms
[info] # Warmup Iteration   2: 122883.338 ops/ms
[info] # Warmup Iteration   3: 119533.782 ops/ms
[info] Iteration   1: 119247.214 ops/ms
[info] Iteration   2: 119536.661 ops/ms
[info] Iteration   3: 119577.004 ops/ms
[info] Iteration   4: 119281.523 ops/ms
[info] Iteration   5: 119348.135 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   119398.108 ±(99.9%) 577.785 ops/ms [Average]
[info]   (min, avg, max) = (119247.214, 119398.108, 119577.004), stdev = 150.049
[info]   CI (99.9%): [118820.322, 119975.893] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.loop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 82.81% complete, ETA 00:01:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3295.214 ops/ms
[info] # Warmup Iteration   2: 3481.349 ops/ms
[info] # Warmup Iteration   3: 3479.521 ops/ms
[info] Iteration   1: 3476.150 ops/ms
[info] Iteration   2: 3464.898 ops/ms
[info] Iteration   3: 3168.769 ops/ms
[info] Iteration   4: 3505.357 ops/ms
[info] Iteration   5: 2985.556 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   3320.146 ±(99.9%) 891.611 ops/ms [Average]
[info]   (min, avg, max) = (2985.556, 3320.146, 3505.357), stdev = 231.549
[info]   CI (99.9%): [2428.535, 4211.757] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.loop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 84.38% complete, ETA 00:01:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23.651 ops/ms
[info] # Warmup Iteration   2: 23.400 ops/ms
[info] # Warmup Iteration   3: 20.917 ops/ms
[info] Iteration   1: 22.879 ops/ms
[info] Iteration   2: 24.284 ops/ms
[info] Iteration   3: 19.834 ops/ms
[info] Iteration   4: 21.370 ops/ms
[info] Iteration   5: 23.222 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   22.318 ±(99.9%) 6.687 ops/ms [Average]
[info]   (min, avg, max) = (19.834, 22.318, 24.284), stdev = 1.737
[info]   CI (99.9%): [15.631, 29.004] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaFibonacci.loop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 85.94% complete, ETA 00:01:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.405 ops/ms
[info] # Warmup Iteration   2: 0.495 ops/ms
[info] # Warmup Iteration   3: 0.501 ops/ms
[info] Iteration   1: 0.494 ops/ms
[info] Iteration   2: 0.496 ops/ms
[info] Iteration   3: 0.416 ops/ms
[info] Iteration   4: 0.499 ops/ms
[info] Iteration   5: 0.468 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   0.474 ±(99.9%) 0.136 ops/ms [Average]
[info]   (min, avg, max) = (0.416, 0.474, 0.499), stdev = 0.035
[info]   CI (99.9%): [0.339, 0.610] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 87.50% complete, ETA 00:01:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 326350.024 ops/ms
[info] # Warmup Iteration   2: 334578.678 ops/ms
[info] # Warmup Iteration   3: 351701.096 ops/ms
[info] Iteration   1: 317074.765 ops/ms
[info] Iteration   2: 362480.371 ops/ms
[info] Iteration   3: 361299.475 ops/ms
[info] Iteration   4: 322803.508 ops/ms
[info] Iteration   5: 316300.299 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   335991.684 ±(99.9%) 91562.436 ops/ms [Average]
[info]   (min, avg, max) = (316300.299, 335991.684, 362480.371), stdev = 23778.474
[info]   CI (99.9%): [244429.247, 427554.120] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 89.06% complete, ETA 00:00:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332297.831 ops/ms
[info] # Warmup Iteration   2: 331955.805 ops/ms
[info] # Warmup Iteration   3: 361103.644 ops/ms
[info] Iteration   1: 321974.605 ops/ms
[info] Iteration   2: 370052.167 ops/ms
[info] Iteration   3: 322191.131 ops/ms
[info] Iteration   4: 320108.935 ops/ms
[info] Iteration   5: 321658.467 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   331197.061 ±(99.9%) 83697.513 ops/ms [Average]
[info]   (min, avg, max) = (320108.935, 331197.061, 370052.167), stdev = 21735.978
[info]   CI (99.9%): [247499.548, 414894.574] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 90.63% complete, ETA 00:00:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 276632.690 ops/ms
[info] # Warmup Iteration   2: 333493.035 ops/ms
[info] # Warmup Iteration   3: 328508.268 ops/ms
[info] Iteration   1: 370796.597 ops/ms
[info] Iteration   2: 323348.954 ops/ms
[info] Iteration   3: 288123.413 ops/ms
[info] Iteration   4: 322129.116 ops/ms
[info] Iteration   5: 314358.527 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   323751.321 ±(99.9%) 115095.351 ops/ms [Average]
[info]   (min, avg, max) = (288123.413, 323751.321, 370796.597), stdev = 29889.897
[info]   CI (99.9%): [208655.970, 438846.673] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.formula
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 92.19% complete, ETA 00:00:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 314732.555 ops/ms
[info] # Warmup Iteration   2: 334092.401 ops/ms
[info] # Warmup Iteration   3: 369942.444 ops/ms
[info] Iteration   1: 368643.393 ops/ms
[info] Iteration   2: 321126.970 ops/ms
[info] Iteration   3: 350649.030 ops/ms
[info] Iteration   4: 346266.062 ops/ms
[info] Iteration   5: 361510.378 ops/ms
[info] 
[info] 
[info] Result "formula":
[info]   349639.167 ±(99.9%) 70146.994 ops/ms [Average]
[info]   (min, avg, max) = (321126.970, 349639.167, 368643.393), stdev = 18216.952
[info]   CI (99.9%): [279492.172, 419786.161] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 10)
[info] 
[info] # Run progress: 93.75% complete, ETA 00:00:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101609.073 ops/ms
[info] # Warmup Iteration   2: 102443.788 ops/ms
[info] # Warmup Iteration   3: 95687.516 ops/ms
[info] Iteration   1: 109951.624 ops/ms
[info] Iteration   2: 109840.658 ops/ms
[info] Iteration   3: 99881.594 ops/ms
[info] Iteration   4: 110061.524 ops/ms
[info] Iteration   5: 109647.991 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   107876.678 ±(99.9%) 17220.074 ops/ms [Average]
[info]   (min, avg, max) = (99881.594, 107876.678, 110061.524), stdev = 4471.999
[info]   CI (99.9%): [90656.604, 125096.752] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 100)
[info] 
[info] # Run progress: 95.31% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20425.847 ops/ms
[info] # Warmup Iteration   2: 20445.704 ops/ms
[info] # Warmup Iteration   3: 18578.636 ops/ms
[info] Iteration   1: 18546.985 ops/ms
[info] Iteration   2: 18577.513 ops/ms
[info] Iteration   3: 19940.253 ops/ms
[info] Iteration   4: 18563.616 ops/ms
[info] Iteration   5: 20737.952 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   19273.264 ±(99.9%) 3901.015 ops/ms [Average]
[info]   (min, avg, max) = (18546.985, 19273.264, 20737.952), stdev = 1013.081
[info]   CI (99.9%): [15372.249, 23174.279] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 1000)
[info] 
[info] # Run progress: 96.88% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2425.843 ops/ms
[info] # Warmup Iteration   2: 2440.856 ops/ms
[info] # Warmup Iteration   3: 2448.096 ops/ms
[info] Iteration   1: 2127.631 ops/ms
[info] Iteration   2: 2445.118 ops/ms
[info] Iteration   3: 2443.352 ops/ms
[info] Iteration   4: 2130.269 ops/ms
[info] Iteration   5: 2131.458 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   2255.565 ±(99.9%) 663.225 ops/ms [Average]
[info]   (min, avg, max) = (2127.631, 2255.565, 2445.118), stdev = 172.237
[info]   CI (99.9%): [1592.340, 2918.791] (assumes normal distribution)
[info] 
[info] 
[info] # JMH 1.8 (released 1 days ago)
[info] # VM invoker: /usr/lib/jvm/java-7-oracle/jre/bin/java
[info] # VM options: -Xms1024m -Xmx1024m -XX:NewSize=896m -XX:MaxNewSize=896m -Xss256k -XX:+UseG1GC -XX:+TieredCompilation -XX:+UseNUMA -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.scala_vs_java.ScalaSumOfArithmeticSeries.loop
[info] # Parameters: (n = 10000)
[info] 
[info] # Run progress: 98.44% complete, ETA 00:00:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 244.430 ops/ms
[info] # Warmup Iteration   2: 246.978 ops/ms
[info] # Warmup Iteration   3: 217.163 ops/ms
[info] Iteration   1: 233.931 ops/ms
[info] Iteration   2: 216.668 ops/ms
[info] Iteration   3: 219.286 ops/ms
[info] Iteration   4: 217.340 ops/ms
[info] Iteration   5: 215.834 ops/ms
[info] 
[info] 
[info] Result "loop":
[info]   220.612 ±(99.9%) 29.087 ops/ms [Average]
[info]   (min, avg, max) = (215.834, 220.612, 233.931), stdev = 7.554
[info]   CI (99.9%): [191.524, 249.699] (assumes normal distribution)
[info] 
[info] 
[info] # Run complete. Total time: 00:08:54
[info] 
[info] Benchmark                             (n)   Mode  Cnt       Score        Error   Units
[info] JavaFactorial.loop                     10  thrpt    5   55577.061 ±  12667.681  ops/ms
[info] JavaFactorial.loop                    100  thrpt    5    1104.769 ±     12.779  ops/ms
[info] JavaFactorial.loop                   1000  thrpt    5       8.106 ±      1.759  ops/ms
[info] JavaFactorial.loop                  10000  thrpt    5       0.039 ±      0.007  ops/ms
[info] JavaFactorial.recursion                10  thrpt    5   51636.558 ±  20824.211  ops/ms
[info] JavaFactorial.recursion               100  thrpt    5     927.342 ±    224.265  ops/ms
[info] JavaFactorial.recursion              1000  thrpt    5      13.296 ±      2.649  ops/ms
[info] JavaFactorial.recursion             10000  thrpt    5       0.094 ±      0.001  ops/ms
[info] JavaFactorial.recursionPar             10  thrpt    5   50486.506 ±  12584.176  ops/ms
[info] JavaFactorial.recursionPar            100  thrpt    5     941.921 ±    197.355  ops/ms
[info] JavaFactorial.recursionPar           1000  thrpt    5      11.556 ±      8.096  ops/ms
[info] JavaFactorial.recursionPar          10000  thrpt    5       0.103 ±      0.013  ops/ms
[info] JavaFactorial.split                    10  thrpt    5   53313.445 ±  13255.776  ops/ms
[info] JavaFactorial.split                   100  thrpt    5     982.397 ±    208.343  ops/ms
[info] JavaFactorial.split                  1000  thrpt    5      19.076 ±      6.283  ops/ms
[info] JavaFactorial.split                 10000  thrpt    5       0.107 ±      0.008  ops/ms
[info] JavaFibonacci.doublingLoop             10  thrpt    5   57002.384 ±  39136.519  ops/ms
[info] JavaFibonacci.doublingLoop            100  thrpt    5    3592.468 ±    565.841  ops/ms
[info] JavaFibonacci.doublingLoop           1000  thrpt    5     327.092 ±     70.472  ops/ms
[info] JavaFibonacci.doublingLoop          10000  thrpt    5      10.764 ±      4.006  ops/ms
[info] JavaFibonacci.loop                     10  thrpt    5   72389.943 ±   8086.496  ops/ms
[info] JavaFibonacci.loop                    100  thrpt    5    3754.558 ±   1603.958  ops/ms
[info] JavaFibonacci.loop                   1000  thrpt    5      23.230 ±      5.608  ops/ms
[info] JavaFibonacci.loop                  10000  thrpt    5       0.449 ±      0.131  ops/ms
[info] JavaSumOfArithmeticSeries.formula      10  thrpt    5  356881.317 ±  83441.449  ops/ms
[info] JavaSumOfArithmeticSeries.formula     100  thrpt    5  341141.678 ± 101516.888  ops/ms
[info] JavaSumOfArithmeticSeries.formula    1000  thrpt    5  327282.255 ±  56268.256  ops/ms
[info] JavaSumOfArithmeticSeries.formula   10000  thrpt    5  365852.296 ±  37614.466  ops/ms
[info] JavaSumOfArithmeticSeries.loop         10  thrpt    5   99996.768 ±  22946.738  ops/ms
[info] JavaSumOfArithmeticSeries.loop        100  thrpt    5   20016.897 ±   5151.322  ops/ms
[info] JavaSumOfArithmeticSeries.loop       1000  thrpt    5    2477.915 ±      8.460  ops/ms
[info] JavaSumOfArithmeticSeries.loop      10000  thrpt    5     227.448 ±     54.569  ops/ms
[info] ScalaFactorial.loop                    10  thrpt    5   47301.508 ±  17174.985  ops/ms
[info] ScalaFactorial.loop                   100  thrpt    5     917.782 ±    153.899  ops/ms
[info] ScalaFactorial.loop                  1000  thrpt    5       7.547 ±      0.276  ops/ms
[info] ScalaFactorial.loop                 10000  thrpt    5       0.034 ±      0.008  ops/ms
[info] ScalaFactorial.recursion               10  thrpt    5   47828.781 ±  25596.170  ops/ms
[info] ScalaFactorial.recursion              100  thrpt    5     907.289 ±    208.882  ops/ms
[info] ScalaFactorial.recursion             1000  thrpt    5      13.097 ±      3.722  ops/ms
[info] ScalaFactorial.recursion            10000  thrpt    5       0.084 ±      0.011  ops/ms
[info] ScalaFactorial.recursionPar            10  thrpt    5   48159.047 ±  14234.878  ops/ms
[info] ScalaFactorial.recursionPar           100  thrpt    5     863.137 ±    230.564  ops/ms
[info] ScalaFactorial.recursionPar          1000  thrpt    5      13.835 ±      7.171  ops/ms
[info] ScalaFactorial.recursionPar         10000  thrpt    5       0.098 ±      0.013  ops/ms
[info] ScalaFactorial.split                   10  thrpt    5   52008.986 ±   7442.423  ops/ms
[info] ScalaFactorial.split                  100  thrpt    5     809.604 ±    271.487  ops/ms
[info] ScalaFactorial.split                 1000  thrpt    5      21.096 ±      4.825  ops/ms
[info] ScalaFactorial.split                10000  thrpt    5       0.123 ±      0.001  ops/ms
[info] ScalaFibonacci.doublingLoop            10  thrpt    5  108415.788 ±  39273.798  ops/ms
[info] ScalaFibonacci.doublingLoop           100  thrpt    5    3280.875 ±    614.295  ops/ms
[info] ScalaFibonacci.doublingLoop          1000  thrpt    5     320.080 ±    132.079  ops/ms
[info] ScalaFibonacci.doublingLoop         10000  thrpt    5      12.428 ±      2.830  ops/ms
[info] ScalaFibonacci.loop                    10  thrpt    5  119398.108 ±    577.785  ops/ms
[info] ScalaFibonacci.loop                   100  thrpt    5    3320.146 ±    891.611  ops/ms
[info] ScalaFibonacci.loop                  1000  thrpt    5      22.318 ±      6.687  ops/ms
[info] ScalaFibonacci.loop                 10000  thrpt    5       0.474 ±      0.136  ops/ms
[info] ScalaSumOfArithmeticSeries.formula     10  thrpt    5  335991.684 ±  91562.436  ops/ms
[info] ScalaSumOfArithmeticSeries.formula    100  thrpt    5  331197.061 ±  83697.513  ops/ms
[info] ScalaSumOfArithmeticSeries.formula   1000  thrpt    5  323751.321 ± 115095.351  ops/ms
[info] ScalaSumOfArithmeticSeries.formula  10000  thrpt    5  349639.167 ±  70146.994  ops/ms
[info] ScalaSumOfArithmeticSeries.loop        10  thrpt    5  107876.678 ±  17220.074  ops/ms
[info] ScalaSumOfArithmeticSeries.loop       100  thrpt    5   19273.264 ±   3901.015  ops/ms
[info] ScalaSumOfArithmeticSeries.loop      1000  thrpt    5    2255.565 ±    663.225  ops/ms
[info] ScalaSumOfArithmeticSeries.loop     10000  thrpt    5     220.612 ±     29.087  ops/ms
[success] Total time: 543 s, completed Apr 7, 2015 2:00:26 PM
